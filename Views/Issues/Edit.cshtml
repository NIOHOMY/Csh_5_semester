@model WebApplication1.Models.Issue
@{
    ViewData["Title"] = "Редактирование";
}
<style>
    .center-content {
        display: flex;
        justify-content: center;
        align-items: center;
    }


    button {
        background-color: #4CAF50;
        color: white;
        padding: 10px;
        border: none;
        width: auto;
        cursor: pointer;
        border-radius: 10%;
        border-radius: 11px;
    }

    button:hover {
        background-color: #45a049;
    }

    input {
        width: 40%;
        margin-bottom: 10px;
        padding: 8px;
        box-sizing: border-box;
    }
</style>

<head>
    <link rel="stylesheet" type="text/css" href="~/css/additional_styles.css">
</head>
<h2 class="text-center">Выдача @Html.DisplayFor(model => model.IssueId)</h2>
<hr />
<div class="row center-content">
    <div class="col-md-5">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="form-group">
                <label asp-for="IssueDate" class="control-label"></label><br>
                <input asp-for="IssueDate" class="form-control" />
                <span asp-validation-for="IssueDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReturnDate" class="control-label"></label><br>
                <input asp-for="ReturnDate" class="form-control" />
                <span asp-validation-for="ReturnDate" class="text-danger"></span>
            </div>
            

            <div class="form-group">
                @* <label asp-for="Reader" class="control-label"></label><br> *@
                <p></p>
                <p>Читатель</p>
                <div>
                    @Html.DisplayFor(model => model.Reader.LastName)
                    @Html.DisplayFor(model => model.Reader.FirstName)
                    @Html.DisplayFor(model => model.Reader.Patronymic)
                    @Html.DisplayFor(model => model.Reader.FormattedPhoneNumber)
                </div>
            </div>
            @if(User.IsInRole("Admin") || User.IsInRole("Manager"))
            {
                <div class="form-group">
                    <p></p>
                    <p>Сменить читателя?</p>
                    <input type="text" id="searchReaders" class="form-control" placeholder="Начните вводить...">
                    <div id="readerList"></div>
                    <input type="hidden" id="selectedReaderId" name="ReaderId" value="@Model.Reader.ReaderId" />
                </div>
            }
            

            <div class="form-group">
                <label>Поиск книг</label><br>
                <input type="text" id="search" class="form-control" placeholder="Начните вводить...">
                <button id="addBook" disabled>Добавить</button>
                <div id="bookList"></div>
            </div><br>
            <div class="form-group">
                <p>Выбранные книги</p>
                <ul id="selectedBooksList">
                    @foreach (var book in ViewBag.SelectedBooks)
                    {
                        <li>
                            @book.Title
                            <button class="removeBookBtn" style="background-color: #FF9100;" data-bookid="@book.BookId">Убрать</button>
                        </li>
                    }
                </ul>
            </div><br>
            <div class="form-group">
                <p>Price</p>
                @Html.DisplayFor(model => model.Price) руб
            </div><br>
            <p>доп оплата: <span id="totalPrice">0</span></p>
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
            <script src="/_framework/aspnetcore-browser-refresh.js"></script>

            <script>
                $(document).ready(function () {

                    var selectedBookIds = [@Html.Raw(Json.Serialize(ViewBag.SelectedBooksIds))];
                    var selectedReaderId = @Html.Raw(Json.Serialize(ViewBag.SelectedReaderId));

                    $(document).on('keyup', '#searchReaders', function () {

                        var query = $(this).val().trim();

                        console.log("Searching for readers: " + query);
                        if (query !== '') {
                            $.ajax({
                                url: "/Issues/SearchReaders",
                                method: "POST",
                                data: { 'query': query, 'selectedReaderId': selectedReaderId },
                                success: function (data) {
                                    console.log(data);
                                    $('#readerList').empty();
                                    $.each(data, function (i, reader) {
                                        $('#readerList').append('<div data-id="' + reader.readerId + '">' + reader.displayText + '</div>');
                                        console.log(reader.readerId);
                                    });
                                    $('#readerList').fadeIn();
                                }
                            });

                        } else {
                            $('#readerList').fadeOut();
                        }
                    });

                    $(document).on('click', '#readerList div', function () {
                        $('#searchReaders').val($(this).text());
                        selectedReaderId = $(this).data('id');
                        $('#selectedReaderId').val(selectedReaderId);
                        console.log(selectedReaderId);
                        $('#readerList').fadeOut();
                    });



                    $(document).on('keyup', '#search', function () {
                        var query = $(this).val().trim();
                        console.log("Searching for: " + query);
                        if (query !== '') {
                            $.ajax({
                                url: "/Issues/SearchBooks",
                                method: "POST",
                                data: { 'query': query },
                                success: function (data) {
                                    console.log(data);
                                    $('#bookList').empty();
                                    $.each(data, function (i, book) {
                                        $('#bookList').append('<div data-id="' + book.bookId + '"><label>' + book.title + '</label></div>');
                                    });
                                    $('#bookList').fadeIn();
                                }
                            });
                        } else {
                            $('#bookList').fadeOut();
                        }
                    });

                    $(document).on('click', '#bookList div', function () {
                        $('#search').val($(this).text());
                        selectedBookIds.push($(this).data('id')); // Добавляем выбранный идентификатор книги в массив
                        $('#addBook').prop('disabled', false);
                        $('#bookList').fadeOut();
                    });

                    
                    $('#addBook').click(function (e) {
                        e.preventDefault();
                        var selectedBooksList = $('#selectedBooksList');
                        var selectedBookIdsInput = $('#selectedBookIds');
                        var selectedBookId = selectedBookIds[selectedBookIds.length - 1];
                        // Получаем информацию о выбранной книге
                        $.ajax({
                            url: "/Issues/GetBookInfo",
                            method: "POST",
                            data: { 'bookId': selectedBookId },
                            success: function (book) {
                                // Добавляем книгу в список
                                selectedBooksList.append('<li data-price="' + book.price + '">' + book.title + ' - ' + book.price + ' руб ' + ' <button class="removeBookBtn" style="background-color: #FF9100;" data-bookid="' + selectedBookId + '">Убрать</button></li>');

                                // Обновляем общую стоимость
                                updateTotalPrice();

                                // Добавляем ID книги в скрытое поле
                                selectedBookIdsInput.val(selectedBookIds.join(','));

                                // Очищаем поле поиска
                                $('#search').val('');
                                $('#addBook').prop('disabled', true);
                            }
                        });
                    });
                    @*$('#addBook').click(function (e) {
                        e.preventDefault();
                        var selectedBooksList = $('#selectedBooksList');
                        var selectedBookIdsInput = $('#selectedBookIds');

                        // Добавляем выбранную книгу в список
                        selectedBooksList.append('<li>' + $('#search').val() + '<button class="removeBookBtn" data-bookid="' + selectedBookIds[selectedBookIds.length - 1] + '">Remove</button></li>');

                        // Обновляем значение скрытого поля с выбранными идентификаторами книг
                        selectedBookIdsInput.val(selectedBookIds.join(','));


                        // Очищаем поле поиска и отключаем кнопку "Add"
                        $('#search').val('');
                        $('#addBook').prop('disabled', true);
                    });*@

                    $(document).on('click', '.removeBookBtn', function (e) {
                        e.preventDefault();
                        var bookId = $(this).data('bookid'); // Получаем идентификатор книги

                        var index = 0; // Находим индекс идентификатора в массиве
                        while (String(selectedBookIds[index]) != String(bookId) && index < selectedBookIds.length) {
                            index++;
                        }

                        if (index >= 0) { 
                            selectedBookIds.splice(index, 1); 
                        }

                        var selectedBookIdsInput = $('#selectedBookIds');

                        // Обновляем значение скрытого поля с выбранными идентификаторами книг
                        selectedBookIdsInput.val(selectedBookIds.join(','));

                        $('#removedBookIds').val(bookId);

                        // Удаляем элемент списка
                        $(this).parent().remove();
                        updateTotalPrice();
                    });

                    function updateTotalPrice() {
                        var totalPrice = 0;
                        $('#selectedBooksList  li').each(function () {
                            var bookPrice = parseFloat($(this).data('price'));
                            
                            if (!isNaN(bookPrice)) {
                                totalPrice += bookPrice;
                            }
                        });
                        $('#totalPrice').text(totalPrice.toFixed(2)+' руб ');
                    }

                });


               
            </script>

            <ul id="selectedBooksList"></ul>
            <input type="hidden" id="selectedBookIds" name="selectedBookIds" value="@ViewBag.SelectedBooksIds" />
            <input type="hidden" id="removedBookIds" name="removedBookIds" />


            <div class="form-group">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="text-center">
    <a asp-action="Index">Назад</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
